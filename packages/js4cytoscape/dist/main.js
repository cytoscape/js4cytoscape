async function cyrestGET(t="",e="",n=defaultBaseUrl){let c=n.concat("/",t);if(""!=e){const t=e;c=c.concat("?",t)}const o=await fetch(c,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json"}});return await o.json()}async function cyrestDELETE(t="",e="",n=defaultBaseUrl){let c=n.concat("/",t);if(""!=e){const t=e;c=c.concat("?",t)}const o=await fetch(c,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json"}});return await o.text()}async function cyrestPOST(t="",e="",n={},c=defaultBaseUrl){let o=c.concat("/",t);if(""!=e){const t=e;o=o.concat("?",t)}const a=JSON.stringify(n),s=await fetch(o,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:a});return await s.json()}async function cyrestPUT(t="",e="",n={},c=defaultBaseUrl){let o=c.concat("/",t);if(""!=e){const t=e;o=o.concat("?",t)}const a=JSON.stringify(n),s=await fetch(o,{method:"PUT",headers:{Accept:"application/json","Content-Type":"application/json"},body:a});return await s.json()}async function commandsGET(t,e=defaultBaseUrl){const n=command2getQuery(t,e);await fetch(n,{method:"GET",headers:{Accept:"text/plain","Content-Type":"text/plain"}}).then(t=>t.text()).then(t=>{console.log(t)})}function command2getQuery(t,e=defaultBaseUrl){let n=t.replace(/\ [A-Za-z0-9_-]*=/g,"XXXXXX$&").split("XXXXXX"),c=n[0].replace(" ","/"),o=e.concat("/commands/"),a=encodeURI(o.concat(c)),s=n.slice(1).join(" "),l="",i=[],r=[];if(void 0!==s&&0!=s.length){const t=/[A-Za-z0-9_-]+=/g;i=(i=(s=s.replace(/['"]+/g,"")).match(t)).map(function(t){return t.replace(/=/g,"")});const e=/\ *[A-Za-z0-9_-]+=/g;r=s.split(e).slice(1),l=i[0]+"="+encodeURI(r[0]);for(var p=1;p<i.length;p++){l=l+"&"+(i[p]+"="+encodeURI(r[p]))}return a+"?"+l}return a}async function deleteAllNetworks(t=defaultBaseUrl){cyrestDELETE("networks",t=t);console.log("All networks are deleted.")}async function cytoscapeVersionInfo(t=defaultBaseUrl){let e=cyrestGET("version",t=t);e.then(t=>{console.log("apiVersion: "+t.apiVersion)}),e.then(t=>{console.log("cytoscapeVersion: "+t.cytoscapeVersion)})}async function cytoscapeMemoryStatus(t=defaultBaseUrl){cyrestGET("","",t=t).then(t=>{console.log(t.memoryStatus)})}const defaultBaseUrl="http://127.0.0.1:1234/v1";