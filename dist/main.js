async function cyrestGET(t="",e="",n=defaultBaseUrl){let a=n.concat("/",t);if(""!=e){const t=e;a=a.concat("?",t)}const c=await fetch(a,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json"}});return await c.json()}async function cyrestDELETE(t="",e="",n=defaultBaseUrl){let a=n.concat("/",t);if(""!=e){const t=e;a=a.concat("?",t)}const c=await fetch(a,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json"}});return await c.text()}async function cyrestPOST(t="",e="",n={},a=defaultBaseUrl){let c=a.concat("/",t);if(""!=e){const t=e;c=c.concat("?",t)}const o=JSON.stringify(n),s=await fetch(c,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:o});return await s.json()}async function cyrestPUT(t="",e="",n={},a=defaultBaseUrl){let c=a.concat("/",t);if(""!=e){const t=e;c=c.concat("?",t)}const o=JSON.stringify(n),s=await fetch(c,{method:"PUT",headers:{Accept:"application/json","Content-Type":"application/json"},body:o});return await s.json()}async function commandsGET(t,e=defaultBaseUrl){const n=command2getQuery(t,e),a=await fetch(n,{method:"GET",headers:{Accept:"text/plain","Content-Type":"text/plain"}});return await a.json()}function command2getQuery(t,e=defaultBaseUrl){let n=t.replace(/( [A-Za-z0-9_-]*=)+/g,"XXXXXX").split("XXXXXX")[0].replace(" ","/"),a=e.concat("/commands/");return encodeURI(a.concat(n))}async function deleteAllNetworks(t=defaultBaseUrl){cyrestDELETE("networks",t=t);console.log("All networks are deleted.")}async function cytoscapeVersionInfo(t=defaultBaseUrl){let e=cyrestGET("version",t=t);e.then(t=>{console.log("apiVersion: "+t.apiVersion)}),e.then(t=>{console.log("cytoscapeVersion: "+t.cytoscapeVersion)})}async function cytoscapeMemoryStatus(t=defaultBaseUrl){cyrestGET("","",t=t).then(t=>{console.log(t.memoryStatus)})}const defaultBaseUrl="http://127.0.0.1:1234/v1";